%Reads and plots EEG data collected on in vivo imaging/recording rig.
%Returns ts and eeg data downsampled to 2kHz, ball speed over time at
%122Hz, sensory stim times, pupil video frame times, and index of first pupil
%video frame with corresponding EEG data (pupil video begins slightly before
%EEG recording.

%input argument
%   folder: path to folder generated by open ephys

%output arguments
%   ts:         time vector assocated with EEG data
%   data:       3xn matrix of 3-channel EEG data
%   tSpeed:     time vector for treadmill running data
%   dSpeed:     treadmill running data
%   puffTimes:  whisker puff times
%   whiskTimes: piezo whisker stim times
%   camTimes:   timestamps for pupil video frames
%   camFrame:   first pupil video frame with corresponding ephys data

%dependencies:
%   load_open_ephys_data (https://github.com/open-ephys/analysis-tools/blob/master/load_open_ephys_data.m)
%   dirr (matlab file exchange)
%   ball_speed
%   get_pupilcam_times
%   get_puff_times
%   get_whiskstim_times

%summary of changes
%7/2019 - added whisker stim extraction; comes from ADC 7
%2/2020 - added pupil camera exposure time extraction
%4/2020 - added pupil camera frame corresponding to first timestamp

function[ts,data,tSpeed,dSpeed,puffTimes,whiskTimes,camTimes,camFrame]=read_open_ephys_axon(folder)

%set output sampling rate
newSampRate = 2000;

[~,~,fch1]=dirr(folder,'CH1.continuous','name');
[~,~,fch2]=dirr(folder,'CH2.continuous','name');
[~,~,fch3]=dirr(folder,'CH8.continuous','name');
[~,~,fchT]=dirr(folder,'ADC1.continuous','name');
[~,~,fchR]=dirr(folder,'ADC2.continuous','name');
[~,~,fchP]=dirr(folder,'ADC4.continuous','name');
[~,~,fchW]=dirr(folder,'ADC6.continuous','name');
[~,~,fchC]=dirr(folder,'ADC8.continuous','name');

[d1,~,i1]=load_open_ephys_data(fch1{1});
d2=load_open_ephys_data(fch2{1});
d3=load_open_ephys_data(fch3{1});
dt=load_open_ephys_data(fchT{1});
dr=load_open_ephys_data(fchR{1});
if ~isempty(fchP)
    dp=load_open_ephys_data(fchP{1});
else
    dp=zeros(numel(dt),1);
end
dw=load_open_ephys_data(fchW{1});
dc=load_open_ephys_data(fchC{1});

%derive downsampling factor
origSampRate=i1.header.sampleRate
downsampleBy=round(origSampRate/newSampRate);

figure(2)
plot(dt)
figure(1)
%get index where imaging starts; only plot that
indstart=find(dt>=2,1);
%switch indstart to 1 if you want the full recording without caring about
%imaging
%indstart=1;
%get frame # for first frame recorded in imaging period
dcinds=1:numel(dc);
%use get_pupilcam_times to get indices of exposure starts
%then compare exposure start indices to indstart (imaging start time)
%to find first frame # included 
allFrameInds=get_pupilcam_times(dcinds,dc);
camFrame=find(allFrameInds>=indstart,1)
datamat=[d1,d2,d3,dp,dw,dc];
datamat=datamat(indstart:end,:);
dr=dr(indstart:end);
clear d1 d2 d3 dp dw dc
close(6)

%downsample EEG and non-running analog channels
for i=1:size(datamat,2)
    datatmp=datamat(:,i);
    datatmp=downsample(datatmp,downsampleBy);
    ts=(linspace(1,length(datatmp),length(datatmp))-1)/newSampRate;
    data(:,i)=datatmp;
end
clear datatmp

%convert running data from PWM to speed
[tSpeed,dSpeed]=ball_speed(dr,origSampRate);

%offset for plotting
d2a=data(:,2)+1500;
d3a=data(:,3)+3000;
dpa=data(:,4)*200+4500;
dw=data(:,5)*200+4500;
dc=data(:,6)*200+4500;

%make time vector for plotting
ldt=length(dr);
expT=(linspace(1,ldt,ldt)-1)/origSampRate;

%get puff times
puffTimes=get_puff_times(ts,data(:,4));
%get whisker piezo stim epochs
whiskTimes=get_whiskstim_times(ts,data(:,5));
%get pupilcam exposure times
camTimes=get_pupilcam_times(ts,data(:,6));

%plot
figure(4)
hold on
%eeg channels
plot(ts,data(:,1),'b')
plot(ts,d2a,'k')
plot(ts,d3a,'Color',[.5,.5,.5])
%puff times if they exist (may want to change how this is done now that
%get_puff_times is called inside this script - consider scattering or
%vertical bars at puff times
if ~isempty(puffTimes)
    plot(ts,dpa,'r')
end
if ~isempty(whiskTimes)
    plot(ts,dw,'b')
end
%if ~isempty(camTimes)
%    plot(ts,dc,'g')
%end
%plot scaled ball speed
plot(tSpeed,dSpeed*500-1000,'g')
